{
	"compiler": {
		"version": "0.8.2+commit.661d1103"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "uuid",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "schema",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "attester",
						"type": "address"
					}
				],
				"name": "Registered",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "_registry",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "uuid",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "schema",
						"type": "bytes"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "uuid",
						"type": "bytes32"
					}
				],
				"name": "getAS",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "uuid",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "index",
								"type": "uint256"
							},
							{
								"internalType": "bytes",
								"name": "schema",
								"type": "bytes"
							}
						],
						"internalType": "struct IAttestationRegistry.ASRecord",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes",
						"name": "schema",
						"type": "bytes"
					}
				],
				"name": "register",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/AttestationRegistry.sol": "AttestationRegistry"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/AttestationRegistry.sol": {
			"keccak256": "0x2869d64ef7d3eb2cec5f6dba5585e9df44825cce081f96de0597c2b66ffb2b46",
			"license": "MIT",
			"urls": [
				"bzz-raw://41acf48dc6cc63f6a60367d553b200779e79a4c5da69608234ddb579b3ab3f27",
				"dweb:/ipfs/QmZ3ujpVbiyK9ThYWpkr5P9tgsYDzwQuS1KFeKGGgBjMpY"
			]
		},
		"contracts/Constants.sol": {
			"keccak256": "0x2e4bcf4a965f840193af8729251386c1826cd050411ba4a9e85984a2551fd2ff",
			"license": "MIT",
			"urls": [
				"bzz-raw://cbab8d73d76e1aa1eaead6a911d5a35f7edb18f9c67484c08bfaa96d4e3e1d68",
				"dweb:/ipfs/QmVxRujQoBdZEote43JdaAgXkYzfqFdBbiu7rPYU3rXf2N"
			]
		},
		"contracts/interfaces/IAttestationRegistry.sol": {
			"keccak256": "0x8abaa38c6322400fd38d094c3cf91b2a885920e94d16c65ceb6652826cd060ce",
			"license": "MIT",
			"urls": [
				"bzz-raw://919c900da4a23f7d17f3cd77f49e01f8166d625560441e9e7ed7f3b55a4e7b4c",
				"dweb:/ipfs/QmbEoM4KhgZxMDrkuEjHqfWcCpdiw4AMUkoXycytcKiP8g"
			]
		},
		"contracts/interfaces/IAttestationServices.sol": {
			"keccak256": "0x93db4e6cc8cb53dda707755343588757bfe6ecda69635e05b625b7194868bcc9",
			"license": "MIT",
			"urls": [
				"bzz-raw://1eea2c26b8ef8f7449a26df697698bdd4fd70f355e756152a426b57c3ddbff76",
				"dweb:/ipfs/QmPqtb8dgibKV6hnfF7zxGwpG5TfWEjLByUCdbZ378V1TZ"
			]
		}
	},
	"version": 1
}